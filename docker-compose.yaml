version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog-service:
    build:
      context: .
      dockerfile: sdu.bachelor.microservice.catalog/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      "broker":
        condition: service_healthy
      "catalog-database":
        condition: service_started

  catalog-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:catalog-service"
    command:
      [
        "./daprd",
        "-app-id",
        "catalog-api",
        "-app-port",
        "80",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./components"
      ]
    volumes:
      - "./components/:/components"
    depends_on:
      "broker":
        condition: service_healthy


  basket-service:
    build:
      context: .
      dockerfile: sdu.bachelor.microservice.basket/Dockerfile
    ports:
      - "5002:80"
    depends_on:
      "broker":
        condition: service_healthy
      "redisBasket":
        condition: service_healthy

  basket-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:basket-service"
    command:
      [
        "./daprd",
        "-app-id",
        "basket-api",
        "-app-port",
        "80",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./components"
      ]
    volumes:
      - "./components/:/components"
    depends_on:
      "broker":
        condition: service_healthy


  order-service:
    build:
      context: .
      dockerfile: sdu.bachelor.microservice.order/Dockerfile
    ports:
      - "5003:80"
    depends_on:
      "broker":
        condition: service_healthy


  order-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:order-service"
    command:
      [
        "./daprd",
        "-app-id",
        "order-api",
        "-app-port",
        "80",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./components"
      ]
    volumes:
      - "./components/:/components"
    depends_on:
      "broker":
        condition: service_healthy


  payment-service:
      build:
        context: .
        dockerfile: sdu.bachelor.microservice.payment/Dockerfile
      ports:
        - "5004:80"
      depends_on:
        "broker":
          condition: service_healthy


  payment-api-dapr:
    image: "daprio/daprd:1.9.4"
    network_mode: "service:payment-service"
    command:
      [
        "./daprd",
        "-app-id",
        "payment-api",
        "-app-port",
        "80",
        "-log-level",
        "debug",
        "-placement-host-address",
        "dapr-placement:50000",
        "-components-path",
        "./components"
      ]
    volumes:
      - "./components/:/components"
    depends_on:
      "broker":
        condition: service_healthy



  
  dapr-placement:
    image: "daprio/dapr:1.9.4"
    command:
      [
        "./placement",
        "-port",
        "50000",
        "-log-level",
        "debug"
      ]
    ports:
      - "50000:50000"

  redisBasket:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "6379" ]
      interval: 10s
      timeout: 5s
      retries: 5


  catalog-database:
        image: mysql:latest
        environment: 
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: catalogdb
            MYSQL_USER: user
            MYSQL_PASSWORD: 1234
        expose: 
          - 3306
        volumes: 
            - ./sdu.bachelor.microservice.catalog/Data:/docker-entrypoint-initdb.d

  order-database:
        image: mysql:latest
        environment: 
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: orderdb
            MYSQL_USER: user
            MYSQL_PASSWORD: 1234
        expose: 
          - 3306
        volumes: 
            - ./sdu.bachelor.microservice.order/Data:/docker-entrypoint-initdb.d